name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [ 'created' ]
env:
  PROJECT_NAME: estk
jobs:
  release:
    name: Release
    needs: build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - name: 'Download Artifact'
        uses: actions/download-artifact@v2
        with:
          name: build
          path: bin/
      - name: List files
        run: |
          find ./bin
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: bin/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
    - name: Build
      env:
        CGOENABLED: 0
      run: |
        mkdir bin || true
        GOOS=linux GOARCH=386 go build -ldflags="-s -w  -extldflags '-static'" -o bin/${PROJECT_NAME}-linux-32 -v 
        GOOS=linux GOARCH=amd64 go build -ldflags="-s -w -extldflags '-static'" -o bin/${PROJECT_NAME}-linux-64 -v 
        GOOS=freebsd GOARCH=amd64 go build -ldflags="-s -w -extldflags '-static'" -o bin/${PROJECT_NAME}-freebsd-64 -v 
        GOOS=freebsd GOARCH=386 go build -ldflags="-s -w -extldflags '-static'" -o bin/${PROJECT_NAME}-freebsd-32 -v 
        GOOS=linux GOARCH=arm GOARM=7 go build -ldflags="-s -w -extldflags '-static'" -o bin/${PROJECT_NAME}-linux-arm7 -v 
        GOOS=linux GOARCH=arm GOARM=6 go build -ldflags="-s -w -extldflags '-static'" -o bin/${PROJECT_NAME}-linux-arm6 -v 
        GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w -extldflags '-static'" -o bin/${PROJECT_NAME}-osx -v 
        GOOS=windows GOARCH=amd64 go build -ldflags="-s -w -extldflags '-static'" -o bin/${PROJECT_NAME}-win64.exe -v 
        GOOS=windows GOARCH=386 go build -ldflags="-s -w -extldflags '-static'" -o bin/${PROJECT_NAME}-win32.exe -v 
        GOOS=netbsd GOARCH=amd64 go build -ldflags="-s -w -extldflags '-static'" -o bin/${PROJECT_NAME}-netbsd-64 -v 
        GOOS=netbsd GOARCH=386 go build -ldflags="-s -w -extldflags '-static'" -o bin/${PROJECT_NAME}-netbsd-32 -v 
        GOOS=openbsd GOARCH=amd64 go build -ldflags="-s -w -extldflags '-static'" -o bin/${PROJECT_NAME}-openbsd-64 -v 
        GOOS=openbsd GOARCH=386 go build -ldflags="-s -w -extldflags '-static'" -o bin/${PROJECT_NAME}-openbsd-32  -v 
    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: bin/